{"version":3,"sources":["D:/personal/githubrepo/ripple/src/keyboardFocus.ts","D:/personal/githubrepo/ripple/src/KeyboardFocusWrapper.ts","D:/personal/githubrepo/ripple/src/enableKeyboardFocus.ts","D:/personal/githubrepo/ripple/src/RippleRender.tsx","D:/personal/githubrepo/ripple/src/RippleElement.ts","D:/personal/githubrepo/ripple/src/enableRipple.ts","D:/personal/githubrepo/ripple/src/withRipple.tsx","D:/personal/githubrepo/ripple/src/useRipple.tsx","D:/personal/githubrepo/ripple/docs/RippleDemo.tsx","D:/personal/githubrepo/ripple/docs/SimpleButton.tsx","D:/personal/githubrepo/ripple/docs/CenterRippleDemo.tsx","D:/personal/githubrepo/ripple/docs/index.mdx"],"names":["internal","listening","focusKeyPressed","pressed","Boolean","detectKeyboardFocus","instance","element","callback","attempt","warning","keyboardFocusCheckTime","keyboardFocusMaxCheckTimes","time","keyboardFocusTimeout","window","setTimeout","activeElement","document","contains","FOCUS_KEYS","isFocusKey","event","indexOf","keycode","onKeyup","listenForFocusKeys","addEventListener","KeyboardFocusWrapper","eventListeners","keyboardFocused","keyDown","eventTriggers","this","onKeyboardFocus","bind","onBlur","onKeyDown","onKeyUp","name","onFocus","forEach","removeEventListener","_event","clearTimeout","key","onSpaceDown","onSpaceUp","enableKeyboardFocus","rippleEnter","keyframes","enterAnimationRule","css","ripplePulsate","pulsateAnimationRule","rippleExit","exitAnimationRule","RippleStyle","createGlobalStyle","id","RippleRender","rippleConfig","rippleLayout","rippleInstances","focusRippleInstance","timeouts","containerRect","containerRectTimeout","getElementById","div","createElement","body","appendChild","ReactDOM","render","addRippleRules","focusRipple","blurRipple","addRipple","removeRipple","addRippleLayout","ripplePos","getRipplePos","rippleSize","getCenterRippleSize","ripple","createRippleInstance","classList","add","Promise","resolve","removeChild","center","getRippleSize","push","shift","timeout","clearContainerRect","splice","length","getBoundingClientRect","fixSize","style","width","height","left","x","top","y","rippleClassName","pos","sizeX","Math","max","abs","getContainerRect","sizeY","sqrt","rect","clientX","touches","clientY","round","rippleLayoutClassName","color","defaultRippleConfig","RippleElement","rippleRender","keyboardFocusHandler","enabled","enable","setConfig","clean","cancel","enableDesktopClickRipple","enableMobileTouchRipple","onSpaceDownWhenKeyboardFocus","onSpaceUpWhenKeyboardFocus","enableKeyboardFocusRipple","then","enableRipple","withRipple","Component","displayName","rippleElement","createRippleElement","prevProps","disabled","props","disabledChanged","disable","findDOMNode","requestAnimationFrame","position","getComputedStyle","React","sinouiName","defaultConfig","useRipple","config","configRef","useRef","isDisabled","domRef","rippleRef","useEffect","current","RippleButton","ref","type","className","RippleDemo","Wrapper","styled","button","SimpleButton","classNames","CenterRipple","CenterRippleDemo","makeShortcode","console","warn","layoutProps","MDXLayout","MDXContent","components","mdxType","parentName","alt","src","__position","__code","__scope","useState","Playground","outline","border","setDisabled","checked","onClick","isMDXComponent"],"mappings":"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","file":"static/js/docs-index.2103552e.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport keycode from 'keycode';\nimport warning from 'warning';\nimport contains from 'dom-helpers/query/contains';\n\n/**\n * 用户可以通过按下一些键盘中的键，让页面元素获取到焦点。此文件是实现监测指定页面元素是否发生了这种情况。\n *\n * 我们称这样的焦点为**键盘焦点**（`keyboardFocus`），称可以产生键盘焦点的键为**焦点键**。\n */\n\nconst internal = {\n  listening: false,\n  focusKeyPressed: false,\n};\n\n/**\n * 获取或者设置是否由按下键盘获取到焦点\n *\n * @param {boolean?} pressed\n */\nexport function focusKeyPressed(pressed?: boolean) {\n  if (typeof pressed !== 'undefined') {\n    internal.focusKeyPressed = Boolean(pressed);\n  }\n\n  return internal.focusKeyPressed;\n}\n\n/**\n * 检测是否处于键盘焦点状态。\n *\n * @param instance 检测源\n * @param element 检测对象\n * @param callback 键盘焦点事件的回调函数\n * @param attempt 第几次尝试检测\n */\nexport function detectKeyboardFocus(\n  instance: {\n    keyboardFocusCheckTime: number;\n    keyboardFocusMaxCheckTimes: number;\n    keyboardFocusTimeout: number;\n  },\n  element: HTMLElement,\n  callback: () => void,\n  attempt = 1,\n) {\n  warning(\n    instance.keyboardFocusCheckTime,\n    'missing instance.keyboardFocusCheckTime',\n  );\n  warning(\n    instance.keyboardFocusMaxCheckTimes,\n    ' missing instance.keyboardFocusMaxCheckTimes',\n  );\n\n  const time = instance.keyboardFocusCheckTime;\n  instance.keyboardFocusTimeout = window.setTimeout(() => {\n    const { activeElement } = document;\n    if (\n      focusKeyPressed() &&\n      (activeElement === element ||\n        (!!activeElement && contains(element, activeElement)))\n    ) {\n      callback();\n    } else if (attempt < instance.keyboardFocusMaxCheckTimes) {\n      detectKeyboardFocus(instance, element, callback, attempt + 1);\n    }\n  }, time);\n}\n\n/**\n * 可引起焦点变化的按键，称之为**焦点键**。\n */\nconst FOCUS_KEYS = [\n  'tab',\n  'enter',\n  'space',\n  'esc',\n  'up',\n  'down',\n  'left',\n  'right',\n];\n\n/**\n * 判断按下的是否是焦点键\n *\n * @export\n * @param {KeyboardEvent} event\n * @returns\n */\nexport function isFocusKey(event: KeyboardEvent) {\n  return FOCUS_KEYS.indexOf(keycode(event)) !== -1;\n}\n\n/**\n * 按下键盘的监听器\n *\n * @export\n * @param {KeyboardEvent} event 按下键盘事件\n */\nexport function onKeyup(event: KeyboardEvent) {\n  if (isFocusKey(event)) {\n    internal.focusKeyPressed = true;\n  }\n}\n\n/**\n * 全局监控可引起焦点变化的键盘输入事件\n *\n * @export\n */\nexport function listenForFocusKeys() {\n  // It's a singleton, we only need to listen once.\n  // Also, this logic is client side only, we don't need a teardown.\n  if (!internal.listening) {\n    window.addEventListener('keyup', onKeyup, false);\n    internal.listening = true;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport keycode from 'keycode';\nimport {\n  detectKeyboardFocus,\n  focusKeyPressed,\n  listenForFocusKeys,\n} from './keyboardFocus';\n\nexport interface KeyboardFocusEventListeners {\n  onFocus?: () => void;\n  onBlur?: () => void;\n  onSpaceDown?: (event: KeyboardEvent) => void;\n  onSpaceUp?: (event: KeyboardEvent) => void;\n}\n\n/**\n * 产生KeyboardFocus相关事件的事件包装器\n */\nexport default class KeyboardFocusWrapper {\n  private keyboardFocused = false;\n\n  private keyDown = false;\n\n  private eventTriggers: Array<{\n    name: string;\n    callback: any;\n  }>;\n\n  public readonly keyboardFocusCheckTime: number = 50;\n\n  public readonly keyboardFocusMaxCheckTimes: number = 5;\n\n  public keyboardFocusTimeout = -1;\n\n  /**\n   * Creates an instance of KeyboardFocusWrapper.\n   * @param {HTMLElement} element 产生事件的HTML元素\n   * @param {KeyboardFocusEventListeners} eventListeners 事件监听器\n   */\n  constructor(\n    private readonly element: HTMLElement,\n    private readonly eventListeners: KeyboardFocusEventListeners,\n  ) {\n    listenForFocusKeys();\n\n    this.onKeyboardFocus = this.onKeyboardFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n\n    this.eventTriggers = [\n      {\n        name: 'focus',\n        callback: this.onFocus.bind(this),\n      },\n      {\n        name: 'mousedown',\n        callback: this.onBlur,\n      },\n      {\n        name: 'touchstart',\n        callback: this.onBlur,\n      },\n      {\n        name: 'blur',\n        callback: this.onBlur,\n      },\n      {\n        name: 'keydown',\n        callback: this.onKeyDown.bind(this),\n      },\n      {\n        name: 'keyup',\n        callback: this.onKeyUp,\n      },\n    ];\n\n    this.eventTriggers.forEach(({ name, callback }) =>\n      this.element.addEventListener(name, callback, false),\n    );\n  }\n\n  public clean() {\n    this.eventTriggers.forEach(({ name, callback }) => {\n      this.element.removeEventListener(name, callback, false);\n    });\n  }\n\n  private onFocus(_event: FocusEvent) {\n    detectKeyboardFocus(this, this.element, this.onKeyboardFocus);\n  }\n\n  private onKeyboardFocus() {\n    this.keyDown = false;\n    this.keyboardFocused = true;\n\n    this.eventListeners.onFocus!();\n  }\n\n  private onBlur() {\n    clearTimeout(this.keyboardFocusTimeout);\n    focusKeyPressed(false);\n\n    if (this.keyboardFocused) {\n      this.keyboardFocused = false;\n      this.eventListeners.onBlur!();\n    }\n  }\n\n  private onKeyDown(event: KeyboardEvent) {\n    const key = keycode(event);\n\n    if (!this.keyDown && this.keyboardFocused && key === 'space') {\n      this.keyDown = true;\n      this.eventListeners.onSpaceDown!(event);\n    }\n  }\n\n  private onKeyUp(event: KeyboardEvent) {\n    const key = keycode(event);\n\n    if (this.keyboardFocused && key === 'space') {\n      this.keyDown = false;\n\n      this.eventListeners.onSpaceUp!(event);\n    }\n  }\n}\n","import KeyboardFocusWrapper, {\n  KeyboardFocusEventListeners,\n} from './KeyboardFocusWrapper';\n\n/**\n * 启用键盘焦点事件\n *\n * @export\n * @param {HTMLElement} element 监听事件的元素\n * @param {KeyboardFocusEventListeners} eventListeners 事件监听器\n * @returns 返回键盘焦点事件监控的包装器\n */\nexport default function enableKeyboardFocus(\n  element: HTMLElement,\n  eventListeners: KeyboardFocusEventListeners,\n) {\n  return new KeyboardFocusWrapper(element, eventListeners);\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport ReactDOM from 'react-dom';\nimport { keyframes, createGlobalStyle, css } from 'styled-components';\nimport React from 'react';\nimport { RippleConfig } from './types';\n\nconst rippleEnter = keyframes`\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3,\n  }\n`;\n\nconst enterAnimationRule = css`\n  animation: ${rippleEnter} 450ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nconst ripplePulsate = keyframes`\n  0% {\n      transform: scale(1);\n  }\n\n  50% {\n      transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst pulsateAnimationRule = css`\n  animation: ${ripplePulsate} 2500ms cubic-bezier(0.4, 0, 0.2, 1) 200ms infinite;\n`;\n\nconst rippleExit = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0%;\n  }\n`;\n\nconst exitAnimationRule = css`\n  animation: ${rippleExit} 400ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nconst RippleStyle = createGlobalStyle`\n  .sinoui-ripple-element {\n    position: relative;\n  }\n  .sinoui-ripple-layout {\n    position: absolute;\n    pointer-events: none;\n    overflow: hidden;\n    z-index: 0;\n  }\n\n  .sinoui-button-ripple-layout {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n  }\n\n  .sinoui-ripple {\n    position: absolute;\n    display: block;\n    top: 0;\n    left: 0;\n    width: 50px;\n    height: 50px;\n    opacity: 0.3;\n    transform: scale(1);\n    ${enterAnimationRule};\n  }\n\n  .sinoui-ripple::after {\n    content: ' ';\n    width: 100%;\n    height: 100%;\n    opacity: 1;\n    display: block;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  .sinoui-ripple-pulsate {\n    animation-duration: 200ms;\n  }\n\n  .sinoui-ripple-pulsate::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    ${pulsateAnimationRule};\n  }\n\n  .sinoui-ripple-exit::after {\n    opacity: 0;\n    ${exitAnimationRule};\n  }\n`;\n\nconst id = 'sinouiRippleStyle';\nfunction addRippleRules() {\n  if (!document.getElementById(id)) {\n    const div = document.createElement('div');\n    div.id = id;\n    document.body.appendChild(div);\n    ReactDOM.render(<RippleStyle />, div);\n  }\n}\n\nexport default class RippleRender {\n  private rippleLayout: HTMLElement | undefined;\n\n  private rippleInstances: HTMLElement[];\n\n  private focusRippleInstance: HTMLElement | undefined;\n\n  private timeouts: number[];\n\n  private containerRect: ClientRect | null = null;\n\n  private containerRectTimeout = -1;\n\n  public constructor(\n    private element: HTMLElement,\n    private rippleConfig: RippleConfig,\n  ) {\n    addRippleRules();\n    this.focusRipple = this.focusRipple.bind(this);\n    this.blurRipple = this.blurRipple.bind(this);\n    this.addRipple = this.addRipple.bind(this);\n    this.removeRipple = this.removeRipple.bind(this);\n    this.rippleInstances = [];\n    this.timeouts = [];\n  }\n\n  public setConfig(rippleConfig: RippleConfig) {\n    this.rippleConfig = rippleConfig;\n  }\n\n  /**\n   * 显示focus状态下的ripple效果，为pulsate效果。\n   *\n   * @returns\n   * @memberof RippleRender\n   */\n  public focusRipple() {\n    this.addRippleLayout();\n    const ripplePos = this.getRipplePos(true);\n    const rippleSize = this.getCenterRippleSize();\n    const ripple = this.createRippleInstance(ripplePos, rippleSize);\n    ripple.classList.add('sinoui-ripple-pulsate');\n    this.rippleLayout!.appendChild(ripple);\n    this.focusRippleInstance = ripple;\n    return Promise.resolve();\n  }\n\n  public blurRipple() {\n    if (this.focusRippleInstance) {\n      this.rippleLayout!.removeChild(this.focusRippleInstance);\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * 添加ripple\n   *\n   * @param {(MouseEvent | TouchEvent)} [event]\n   */\n  public addRipple(event?: MouseEvent | TouchEvent) {\n    this.addRippleLayout();\n    const ripplePos = this.getRipplePos(this.rippleConfig.center, event);\n    const rippleSize = this.getRippleSize(ripplePos);\n    const ripple = this.createRippleInstance(ripplePos, rippleSize);\n    this.rippleLayout!.appendChild(ripple);\n    this.rippleInstances.push(ripple);\n    return Promise.resolve();\n  }\n\n  /**\n   * 删除ripple\n   */\n  public removeRipple() {\n    const ripple = this.rippleInstances.shift();\n    if (ripple) {\n      ripple.classList.add('sinoui-ripple-exit');\n      const timeout = setTimeout(() => {\n        this.clearContainerRect();\n        this.rippleLayout!.removeChild(ripple);\n        this.timeouts.splice(this.timeouts.indexOf(timeout), 1);\n      }, 550);\n      this.timeouts.push(timeout);\n    }\n    return Promise.resolve();\n  }\n\n  public clean() {\n    clearTimeout(this.containerRectTimeout);\n    this.timeouts.forEach((timeout) => clearTimeout(timeout));\n  }\n\n  private clearContainerRect() {\n    clearTimeout(this.containerRectTimeout);\n    const timeout = setTimeout(() => {\n      if (this.rippleInstances.length === 0) {\n        this.containerRect = null;\n      }\n    }, 450);\n    this.containerRectTimeout = timeout;\n  }\n\n  private getContainerRect() {\n    if (!this.containerRect) {\n      this.containerRect = this.rippleLayout!.getBoundingClientRect();\n    }\n\n    return this.containerRect;\n  }\n\n  private createRippleInstance(\n    ripplePos: { x: number; y: number },\n    rippleSize: number,\n  ) {\n    const ripple = document.createElement('span');\n    if (!this.rippleConfig.fixSize) {\n      ripple.style.width = `${rippleSize}px`;\n      ripple.style.height = `${rippleSize}px`;\n    }\n    if (!this.rippleConfig.center) {\n      ripple.style.left = `${-(rippleSize / 2) + ripplePos.x}px`;\n      ripple.style.top = `${-(rippleSize / 2) + ripplePos.y}px`;\n    }\n    ripple.classList.add('sinoui-ripple');\n    if (this.rippleConfig.rippleClassName) {\n      ripple.classList.add(this.rippleConfig.rippleClassName);\n    }\n    return ripple;\n  }\n\n  private getRippleSize(pos: { x: number; y: number }) {\n    const sizeX =\n      Math.max(Math.abs(this.getContainerRect().width - pos.x), pos.x) * 2 + 2;\n    const sizeY =\n      Math.max(Math.abs(this.getContainerRect().height - pos.y), pos.y) * 2 + 2;\n    const rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n\n    return rippleSize;\n  }\n\n  /**\n   * 获取在元素中心显示的ripple的\b尺寸\n   *\n   * @private\n   * @memberof RippleRender\n   */\n  private getCenterRippleSize() {\n    const rect = this.getContainerRect();\n    const rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3);\n\n    return rippleSize;\n  }\n\n  /**\n   * 获取ripple元素的尺寸\n   *\n   * @private\n   * @param {boolean} center\n   * @param {(MouseEvent | TouchEvent)} [event]\n   * @returns\n   * @memberof RippleRender\n   */\n  private getRipplePos(\n    center: boolean | undefined,\n    event?: MouseEvent | TouchEvent,\n  ) {\n    const rect = this.getContainerRect();\n\n    if (center || !event) {\n      return {\n        x: rect.width / 2,\n        y: rect.height / 2,\n      };\n    }\n\n    const clientX =\n      (event as MouseEvent).clientX ||\n      ((event as TouchEvent).touches\n        ? (event as TouchEvent).touches[0].clientX\n        : 0);\n    const clientY =\n      (event as MouseEvent).clientY ||\n      ((event as TouchEvent).touches\n        ? (event as TouchEvent).touches[0].clientY\n        : 0);\n\n    if (clientX === 0 && clientY === 0) {\n      return {\n        x: rect.width / 2,\n        y: rect.height / 2,\n      };\n    }\n\n    return {\n      x: Math.round(clientX - rect.left),\n      y: Math.round(clientY - rect.top),\n    };\n  }\n\n  private addRippleLayout() {\n    if (!this.rippleLayout) {\n      this.rippleLayout = document.createElement('span');\n      // 修复IE不支持多参数的add引起的bug：[can i use - classList](https://caniuse.com/#feat=classlist)\n      this.rippleLayout.classList.add('sinoui-ripple-layout');\n      this.rippleLayout.classList.add(\n        this.rippleConfig.rippleLayoutClassName ||\n          'sinoui-button-ripple-layout',\n      );\n      if (this.rippleConfig.color) {\n        this.rippleLayout.style.color = this.rippleConfig.color;\n      }\n      this.element.appendChild(this.rippleLayout);\n    }\n  }\n}\n","import RippleRender from './RippleRender';\nimport enableKeyboardFocus from './enableKeyboardFocus';\nimport KeyboardFocusWrapper from './KeyboardFocusWrapper';\nimport { RippleConfig } from './types';\n\nconst defaultRippleConfig = {\n  enableKeyboardFocus: true,\n};\n\n/**\n * 启用Ripple效果的元素\n *\n * @export\n * @class RippleElement\n */\nexport default class RippleElement {\n  private rippleRender: RippleRender;\n\n  private keyboardFocusHandler: KeyboardFocusWrapper = {} as any;\n\n  private rippleConfig: RippleConfig;\n\n  private eventTriggers: Array<{\n    name: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback: any;\n  }> = [];\n\n  private enabled = false;\n\n  constructor(\n    private element: HTMLElement,\n    rippleConfig: RippleConfig = defaultRippleConfig,\n  ) {\n    this.rippleConfig = {\n      ...defaultRippleConfig,\n      ...rippleConfig,\n    };\n\n    this.rippleRender = new RippleRender(element, this.rippleConfig);\n\n    this.enable();\n  }\n\n  public setConfig(rippleConfig: RippleConfig = defaultRippleConfig) {\n    this.rippleConfig = {\n      ...defaultRippleConfig,\n      ...rippleConfig,\n    };\n    this.rippleRender.setConfig(this.rippleConfig);\n  }\n\n  /**\n   * 取消ripple效果\n   */\n  public cancel() {\n    this.rippleRender.clean();\n    if (this.keyboardFocusHandler) {\n      this.keyboardFocusHandler.clean();\n    }\n    this.eventTriggers.forEach(({ name, callback }) => {\n      this.element.removeEventListener(name, callback, false);\n    });\n  }\n\n  /**\n   * 禁用ripple效果\n   */\n  public disable() {\n    if (this.enabled === false) {\n      return;\n    }\n    this.enabled = false;\n    this.cancel();\n  }\n\n  /**\n   * 启用ripple效果\n   */\n  public enable() {\n    if (this.enabled) {\n      return;\n    }\n\n    this.eventTriggers = [];\n    this.enabled = true;\n\n    this.enableDesktopClickRipple();\n    this.enableMobileTouchRipple();\n\n    this.eventTriggers.forEach(({ name, callback }) => {\n      this.element.addEventListener(name, callback, false);\n    });\n\n    if (this.rippleConfig.enableKeyboardFocus) {\n      this.onSpaceDownWhenKeyboardFocus = this.onSpaceDownWhenKeyboardFocus.bind(\n        this,\n      );\n      this.onSpaceUpWhenKeyboardFocus = this.onSpaceUpWhenKeyboardFocus.bind(\n        this,\n      );\n      this.enableKeyboardFocusRipple();\n    }\n  }\n\n  private enableDesktopClickRipple() {\n    this.eventTriggers.push(\n      {\n        name: 'mousedown',\n        callback: this.rippleRender.addRipple,\n      },\n      {\n        name: 'mouseup',\n        callback: this.rippleRender.removeRipple,\n      },\n      {\n        name: 'mouseleave',\n        callback: this.rippleRender.removeRipple,\n      },\n    );\n  }\n\n  private enableMobileTouchRipple() {\n    this.eventTriggers.push(\n      {\n        name: 'touchstart',\n        callback: this.rippleRender.addRipple,\n      },\n      {\n        name: 'touchmove',\n        callback: this.rippleRender.removeRipple,\n      },\n      {\n        name: 'touchend',\n        callback: this.rippleRender.removeRipple,\n      },\n    );\n  }\n\n  private enableKeyboardFocusRipple() {\n    this.keyboardFocusHandler = enableKeyboardFocus(this.element, {\n      onFocus: this.rippleRender.focusRipple,\n      onBlur: this.rippleRender.blurRipple,\n      onSpaceDown: this.onSpaceDownWhenKeyboardFocus,\n      onSpaceUp: this.onSpaceUpWhenKeyboardFocus,\n    });\n  }\n\n  private onSpaceDownWhenKeyboardFocus(_event: KeyboardEvent) {\n    this.rippleRender.blurRipple().then(() => this.rippleRender.addRipple());\n  }\n\n  private onSpaceUpWhenKeyboardFocus() {\n    this.rippleRender.removeRipple().then(this.rippleRender.focusRipple);\n  }\n}\n","import RippleElement from './RippleElement';\nimport { RippleConfig } from './types';\n\n/**\n * 给元素应用上ripple效果\n *\n * @param element 应用ripple效果的元素\n * @param rippleConfig ripple效果配置\n */\nexport default function enableRipple(\n  element: HTMLElement,\n  rippleConfig: RippleConfig,\n) {\n  return new RippleElement(element, rippleConfig);\n}\n","import React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { RippleConfig } from './types';\nimport RippleElement from './RippleElement';\n\ninterface BaseProps {\n  disabled?: boolean;\n}\n\nconst withRipple = (rippleConfig?: RippleConfig) => {\n  function createEnableRippleComponent<P extends BaseProps>(Component: any) {\n    const name =\n      typeof Component === 'string' ? Component : Component.displayName;\n    return class EnableRippleComponent extends React.Component<P> {\n      // eslint-disable-next-line react/static-property-placement\n      public static displayName = `withRipple(${name})`;\n\n      public static sinouiName = name;\n\n      public rippleElement?: RippleElement;\n\n      public componentDidMount() {\n        this.createRippleElement();\n      }\n\n      public componentDidUpdate(prevProps: P) {\n        const { disabled } = this.props;\n        const disabledChanged = prevProps.disabled !== disabled;\n\n        if (disabledChanged && disabled && this.rippleElement) {\n          this.rippleElement.disable();\n        } else if (disabledChanged && !disabled) {\n          if (!this.rippleElement) {\n            this.createRippleElement();\n          } else {\n            this.rippleElement.enable();\n          }\n        }\n      }\n\n      public componentWillUnmount() {\n        if (this.rippleElement) {\n          this.rippleElement.cancel();\n        }\n      }\n\n      public createRippleElement() {\n        // eslint-disable-next-line react/no-find-dom-node\n        const element = findDOMNode(this) as HTMLElement;\n        this.rippleElement = new RippleElement(element, rippleConfig);\n        requestAnimationFrame(() => {\n          const { position } = window.getComputedStyle(element);\n          if (!position || position === 'static') {\n            element.style.position = 'relative';\n          }\n        });\n      }\n\n      public render() {\n        return <Component {...this.props} />;\n      }\n    };\n  }\n\n  return createEnableRippleComponent;\n};\n\nexport default withRipple;\n","import { useRef, useEffect } from 'react';\nimport { RippleConfig } from './types';\nimport enableRipple from './enableRipple';\nimport RippleElement from './RippleElement';\n\nconst defaultConfig = {};\n\n/**\n * 启用水波纹效果\n *\n * @param config 配置\n * @param disabled 禁用。注意：从1.0.0版本开始，disabled放入config中处理\n */\nexport default function useRipple<T extends HTMLElement>(\n  config: RippleConfig & {\n    position?: 'absolute' | 'relative' | 'fixed' | 'static';\n    color?: string;\n  } = defaultConfig,\n  disabled?: boolean,\n) {\n  const configRef = useRef(config);\n  const isDisabled = config.disabled || disabled;\n  const domRef = useRef<T>();\n  const rippleRef = useRef<RippleElement | null>(null);\n\n  useEffect(() => {\n    const element = domRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    const ripple = enableRipple(element, configRef.current);\n    rippleRef.current = ripple;\n\n    return () => {\n      ripple.disable();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!rippleRef.current) {\n      return;\n    }\n    if (isDisabled) {\n      rippleRef.current.disable();\n    } else {\n      rippleRef.current.enable();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (rippleRef.current) {\n      rippleRef.current.setConfig(config);\n    }\n  }, [config]);\n\n  const { position = 'relative' } = config;\n\n  useEffect(() => {\n    const element = domRef.current;\n\n    if (element) {\n      const { position: originPosition } = getComputedStyle(element, null);\n      if (originPosition === 'static') {\n        element.style.position = position;\n        return () => {\n          element.style.position = 'static';\n        };\n      }\n    }\n\n    return undefined;\n  }, [position]);\n\n  return domRef;\n}\n","import React from 'react';\nimport { useRipple } from '../src';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nfunction RippleButton(props: Props) {\n  const ref = useRipple<HTMLButtonElement>();\n\n  return (\n    <button type=\"button\" className=\"sinoui-button\" {...props} ref={ref} />\n  );\n}\n\nexport default function RippleDemo() {\n  return <RippleButton>这是按钮</RippleButton>;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport { useRipple } from '../src';\n\nconst Wrapper = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background-color: transparent;\n  outline: none;\n  border: 0px;\n  padding: 0px;\n  vertical-align: middle;\n  appearance: none;\n  text-decoration: none;\n  &::-moz-focus-inner {\n    border-style: none;\n  }\n  cursor: pointer;\n  color: rgba(0, 0, 0, 0.87);\n  padding: 8px 16px;\n  min-width: 88px;\n  min-height: 36px;\n  box-sizing: border-box;\n  margin: 8px;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.12);\n  }\n\n  &.sinoui-button-disabled {\n    pointer-events: none;\n    cursor: default;\n  }\n`;\n\nexport default function SimpleButton(props) {\n  const rippleRef = useRipple();\n  const { disabled } = props;\n  return (\n    <Wrapper\n      className={classNames('sinoui-button', {\n        'sinoui-button-disabled': disabled,\n      })}\n      ref={rippleRef}\n      {...props}\n    />\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport { useRipple } from '../src';\n\nconst Wrapper = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background-color: transparent;\n  outline: none;\n  border: 0px;\n  padding: 0px;\n  vertical-align: middle;\n  appearance: none;\n  text-decoration: none;\n  &::-moz-focus-inner {\n    border-style: none;\n  }\n  cursor: pointer;\n  color: rgba(0, 0, 0, 0.87);\n  width: 20px;\n  height: 20px;\n  box-sizing: border-box;\n  margin: 8px;\n  overflow: visible;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.12);\n  }\n\n  &.sinoui-icon-button-disabled {\n    pointer-events: none;\n    cursor: default;\n  }\n\n  .sinoui-icon-button__ripple-layout {\n    left: -14px;\n    top: -14px;\n    width: 48px;\n    height: 48px;\n  }\n\n  .sinoui-icon-button__ripple {\n    width: 48px;\n    height: 48px;\n  }\n`;\n\nfunction CenterRipple(props) {\n  const rippleRef = useRipple({\n    center: true,\n    rippleLayoutClassName: 'sinoui-icon-button__ripple-layout',\n    rippleClassName: 'sinoui-icon-button__ripple',\n    fixSize: true,\n  });\n  const { disabled } = props;\n  return (\n    <Wrapper\n      className={classNames('sinoui-icon-button', {\n        'sinoui-icon-button-disabled': disabled,\n      })}\n      ref={rippleRef}\n      {...props}\n    />\n  );\n}\n\nexport default function CenterRippleDemo() {\n  return <CenterRipple>Avatar</CenterRipple>;\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { useRef, useEffect, useState } from 'react';\nimport { Playground } from 'docz';\nimport RippleDemo from './RippleDemo';\nimport { useRipple, enableRipple } from '../src';\nimport SimpleButton from './SimpleButton';\nimport CenterRippleDemo from './CenterRippleDemo';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst RippleButton = makeShortcode(\"RippleButton\");\nconst EnableRippleButton = makeShortcode(\"EnableRippleButton\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p><inlineCode parentName=\"p\">{`@sinoui/ripple`}</inlineCode>{`实现了水波纹的点击效果。`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@sinoui/ripple\"\n      }}><img alt=\"npm version\" src=\"https://img.shields.io/npm/v/@sinoui/ripple\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@sinoui/ripple\"\n      }}><img alt=\"downloads\" src=\"https://img.shields.io/npm/dm/@sinoui/ripple\" /></a></p>\n    <h2 {...{\n      \"id\": \"安装依赖\"\n    }}>{`安装依赖`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`yarn add @sinoui/ripple\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"入门示例\"\n    }}>{`入门示例`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { useRipple } from '@sinoui/ripple';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nfunction RippleButton(props: Props) {\n  const ref = useRipple<HTMLButtonElement>();\n\n  return (\n    <button type=\"button\" className=\"sinoui-button\" {...props} ref={ref} />\n  );\n}\n\nexport default function RippleDemo() {\n  return <RippleButton>这是按钮</RippleButton>;\n}\n`}</code></pre>\n    <Playground __position={0} __code={'<RippleDemo />'} __scope={{\n      props: this ? this.props : props,\n      useRef,\n      useEffect,\n      useState,\n      Playground,\n      RippleDemo,\n      useRipple,\n      enableRipple,\n      SimpleButton,\n      CenterRippleDemo\n    }} mdxType=\"Playground\">\n  <RippleDemo mdxType=\"RippleDemo\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"useripple\"\n    }}>{`useRipple`}</h2>\n    <p>{`使用水波纹效果的 hook。`}</p>\n    <p><inlineCode parentName=\"p\">{`useRipple()`}</inlineCode>{`可以接收两个参数:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`config`}</inlineCode>{` ripple 的配置项，主要包括：`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`center`}</inlineCode>{` - 是否居中显示 ripple 效果。默认为 false，表示 ripple 的起始位置是鼠标点击的位置。如果设置为 true，则 ripple 的起始位置为元素的中心位置。`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`enableKeyboardFocus`}</inlineCode>{` - 是否启用键盘 focus 的 ripple 效果。默认为 true，表示元素通过键盘（例如 tab）事件获取到焦点后，有 ripple 效果。`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rippleLayoutClassName`}</inlineCode>{` - ripple 布局容器的 css 类名。`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rippleClassName`}</inlineCode>{` - ripple 元素的 css 类名。`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fixSize`}</inlineCode>{` - 是否固定 ripple 的尺寸。默认为 false。如果设置为 true，则会计算 ripple 的尺寸`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`color`}</inlineCode>{` - 设置水波纹效果的颜色（默认为`}<inlineCode parentName=\"li\">{`currentColor`}</inlineCode>{`）`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`disabled`}</inlineCode>{` 不可用状态。`}<strong parentName=\"li\">{`注意：新的设计 disabled 已经放入 config 中处理`}</strong></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"简单使用\"\n    }}>{`简单使用`}</h3>\n    <p><inlineCode parentName=\"p\">{`SimpleButton.tsx`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import React from 'react';\nimport styled from 'styled-components';\nimport classNames from 'classnames';\nimport { useRipple } from '@sinoui/ripple';\n\nconst Wrapper = styled.button\\`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background-color: transparent;\n  outline: none;\n  border: 0px;\n  padding: 0px;\n  vertical-align: middle;\n  appearance: none;\n  text-decoration: none;\n  &::-moz-focus-inner {\n    border-style: none;\n  }\n  cursor: pointer;\n  color: rgba(0, 0, 0, 0.87);\n  padding: 8px 16px;\n  min-width: 88px;\n  min-height: 36px;\n  box-sizing: border-box;\n  margin: 8px;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.12);\n  }\n\n  &.sinoui-button-disabled {\n    pointer-events: none;\n    cursor: default;\n  }\n\\`;\n\nfunction SimpleButton(props) {\n  const rippleRef = useRipple();\n  const { disabled } = props;\n  return (\n    <Wrapper\n      className={classNames('sinoui-button', {\n        'sinoui-button-disabled': disabled,\n      })}\n      ref={rippleRef}\n      {...props}\n    />\n  );\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Demo.tsx`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`function Demo() {\n  return <SimpleButton>按钮</SimpleButton>;\n}\n`}</code></pre>\n    <Playground __position={1} __code={'<SimpleButton>按钮</SimpleButton>'} __scope={{\n      props: this ? this.props : props,\n      useRef,\n      useEffect,\n      useState,\n      Playground,\n      RippleDemo,\n      useRipple,\n      enableRipple,\n      SimpleButton,\n      CenterRippleDemo\n    }} mdxType=\"Playground\">\n  <SimpleButton mdxType=\"SimpleButton\">按钮</SimpleButton>\n    </Playground>\n    <h3 {...{\n      \"id\": \"键盘获取焦点时的-ripple-效果\"\n    }}>{`键盘获取焦点时的 ripple 效果`}</h3>\n    <Playground __position={2} __code={'<SimpleButton>按钮一</SimpleButton>\\n<SimpleButton>按钮二</SimpleButton>'} __scope={{\n      props: this ? this.props : props,\n      useRef,\n      useEffect,\n      useState,\n      Playground,\n      RippleDemo,\n      useRipple,\n      enableRipple,\n      SimpleButton,\n      CenterRippleDemo\n    }} mdxType=\"Playground\">\n  <SimpleButton mdxType=\"SimpleButton\">按钮一</SimpleButton>\n  <SimpleButton mdxType=\"SimpleButton\">按钮二</SimpleButton>\n    </Playground>\n    <h3 {...{\n      \"id\": \"居中显示-ripple\"\n    }}>{`居中显示 ripple`}</h3>\n    <p>{`在使用 useRipple 时,配置项中添加`}<inlineCode parentName=\"p\">{`center:true`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import styled from 'styled-components';\nimport classNames from 'classnames';\nimport { useRipple } from '@sinoui/ripple';\n\nconst Wrapper = styled.button\\`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  background-color: transparent;\n  outline: none;\n  border: 0px;\n  padding: 0px;\n  vertical-align: middle;\n  appearance: none;\n  text-decoration: none;\n  &::-moz-focus-inner {\n    border-style: none;\n  }\n  cursor: pointer;\n  color: rgba(0, 0, 0, 0.87);\n  width: 20px;\n  height: 20px;\n  box-sizing: border-box;\n  margin: 8px;\n  overflow: visible;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.12);\n  }\n\n  &.sinoui-icon-button-disabled {\n    pointer-events: none;\n    cursor: default;\n  }\n\n  .sinoui-icon-button__ripple-layout {\n    left: -14px;\n    top: -14px;\n    width: 48px;\n    height: 48px;\n  }\n\n  .sinoui-icon-button__ripple {\n    width: 48px;\n    height: 48px;\n  }\n\\`;\n\nfunction CenterRipple(props) {\n  const rippleRef = useRipple({\n    center: true,\n    rippleLayoutClassName: 'sinoui-icon-button__ripple-layout',\n    rippleClassName: 'sinoui-icon-button__ripple',\n    fixSize: true,\n  });\n  const { disabled } = props;\n  return (\n    <Wrapper\n      className={classNames('sinoui-icon-button', {\n        'sinoui-icon-button-disabled': disabled,\n      })}\n      ref={rippleRef}\n      {...props}\n    />\n  );\n}\n\nexport default function CenterRippleDemo() {\n  return <CenterRipple>Avatar</CenterRipple>;\n}\n`}</code></pre>\n    <Playground __position={3} __code={'<CenterRippleDemo />'} __scope={{\n      props: this ? this.props : props,\n      useRef,\n      useEffect,\n      useState,\n      Playground,\n      RippleDemo,\n      useRipple,\n      enableRipple,\n      SimpleButton,\n      CenterRippleDemo\n    }} mdxType=\"Playground\">\n  <CenterRippleDemo mdxType=\"CenterRippleDemo\" />\n    </Playground>\n    <p>{`上述示例中，使用`}<inlineCode parentName=\"p\">{`{center:true}`}</inlineCode>{`使水波纹效果从中间展开，为了效果更加美观，使用`}<inlineCode parentName=\"p\">{`{fixSize:true}`}</inlineCode>{`固定了 ripple 的效果；\n并且分别使用`}<inlineCode parentName=\"p\">{`rippleLayoutClassName`}</inlineCode>{`、`}<inlineCode parentName=\"p\">{`rippleClassName`}</inlineCode>{`自定义了 ripple 及其布局的样式。`}</p>\n    <h3 {...{\n      \"id\": \"设置-ripple-的颜色\"\n    }}>{`设置 ripple 的颜色`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { useRipple } from '@sinoui/ripple';\n\nfunction RippleButton(props) {\n  const ref = useRipple({ color: 'red' });\n\n  return (\n    <button\n      type=\"button\"\n      className=\"sinoui-button\"\n      style={{ outline: 'none' }}\n      {...props}\n      ref={ref}\n    />\n  );\n}\n\nexport default function RippleDemo() {\n  return <RippleButton>这是按钮</RippleButton>;\n}\n`}</code></pre>\n    <Playground __position={4} __code={'() => {\\n  function RippleButton(props) {\\n    const ref = useRipple({ color: \\'red\\' })\\n    return (\\n      <button\\n        type=\\\"button\\\"\\n        className=\\\"sinoui-button\\\"\\n        style={{ outline: \\'none\\', border: \\'none\\' }}\\n        {...props}\\n        ref={ref}\\n      />\\n    )\\n  }\\n\\n  return <RippleButton>按钮</RippleButton>\\n}'} __scope={{\n      props: this ? this.props : props,\n      useRef,\n      useEffect,\n      useState,\n      Playground,\n      RippleDemo,\n      useRipple,\n      enableRipple,\n      SimpleButton,\n      CenterRippleDemo\n    }} mdxType=\"Playground\">\n  {() => {\n        function RippleButton(props) {\n          const ref = useRipple({\n            color: 'red'\n          });\n          return <button type=\"button\" className=\"sinoui-button\" style={{\n            outline: 'none',\n            border: 'none'\n          }} {...props} ref={ref} />;\n        }\n\n        return <RippleButton mdxType=\"RippleButton\">按钮</RippleButton>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"不可用的状态\"\n    }}>{`不可用的状态`}</h3>\n    <Playground __position={5} __code={'() => {\\n  const [disabled, setDisabled] = useState(false)\\n  return (\\n    <>\\n      <div>\\n        <label>\\n          禁用:{\\' \\'}\\n          <input\\n            type=\\\"checkbox\\\"\\n            checked={disabled}\\n            onClick={() => setDisabled(!disabled)}\\n          />\\n        </label>\\n      </div>\\n      <SimpleButton disabled={disabled}>不可用按钮</SimpleButton>\\n    </>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      useRef,\n      useEffect,\n      useState,\n      Playground,\n      RippleDemo,\n      useRipple,\n      enableRipple,\n      SimpleButton,\n      CenterRippleDemo\n    }} mdxType=\"Playground\">\n  {() => {\n        const [disabled, setDisabled] = useState(false);\n        return <>\n  <div>\n    <label>禁用: <input type=\"checkbox\" checked={disabled} onClick={() => setDisabled(!disabled)} /></label>\n  </div>\n  <SimpleButton disabled={disabled} mdxType=\"SimpleButton\">不可用按钮</SimpleButton>\n        </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"enableripple的使用\"\n    }}><inlineCode parentName=\"h2\">{`enableRipple`}</inlineCode>{`的使用`}</h2>\n    <p>{`除了`}<inlineCode parentName=\"p\">{`useRipple`}</inlineCode>{`外，我们还有另外一种使用方式--`}<inlineCode parentName=\"p\">{`enableRipple`}</inlineCode>{`。`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`import { enableRipple } from '@sinoui/ripple';\n\nfunction EnableRippleButton(props) {\n  const rippleRef = useRef();\n  const rippleConfig = {};\n\n  useEffect(() => {\n    const rippleElement = enableRipple(rippleRef.current, rippleConfig);\n\n    return () => {\n      rippleElement.cancel();\n    };\n  });\n\n  return (\n    <button\n      type=\"button\"\n      className=\"sinoui-button\"\n      style={{ outline: 'none', border: 'none' }}\n      {...props}\n      ref={rippleRef}\n    />\n  );\n}\n\nexport default function Demo() {\n  return <EnableRippleButton>按钮</EnableRippleButton>;\n}\n`}</code></pre>\n    <Playground __position={6} __code={'() => {\\n  function EnableRippleButton(props) {\\n    const rippleRef = useRef()\\n    const rippleConfig = {}\\n    useEffect(() => {\\n      const rippleElement = enableRipple(rippleRef.current, rippleConfig)\\n      return () => {\\n        rippleElement.cancel()\\n      }\\n    })\\n\\n    return (\\n      <button\\n        type=\\\"button\\\"\\n        className=\\\"sinoui-button\\\"\\n        style={{ outline: \\'none\\', border: \\'none\\' }}\\n        {...props}\\n        ref={rippleRef}\\n      />\\n    )\\n  }\\n\\n  return <EnableRippleButton>按钮</EnableRippleButton>\\n}'} __scope={{\n      props: this ? this.props : props,\n      useRef,\n      useEffect,\n      useState,\n      Playground,\n      RippleDemo,\n      useRipple,\n      enableRipple,\n      SimpleButton,\n      CenterRippleDemo\n    }} mdxType=\"Playground\">\n  {() => {\n        function EnableRippleButton(props) {\n          const rippleRef = useRef();\n          const rippleConfig = {};\n          useEffect(() => {\n            const rippleElement = enableRipple(rippleRef.current, rippleConfig);\n            return () => {\n              rippleElement.cancel();\n            };\n          });\n          return <button type=\"button\" className=\"sinoui-button\" style={{\n            outline: 'none',\n            border: 'none'\n          }} {...props} ref={rippleRef} />;\n        }\n\n        return <EnableRippleButton mdxType=\"EnableRippleButton\">按钮</EnableRippleButton>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}